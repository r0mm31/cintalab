name: CI

on:
  pull_request:
    types: [opened, reopened]
  push:
    branches: ["main"]

jobs:
  build-image:
    name: Build and Test the Docker Image
    runs-on: ubuntu-20.04

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Set up QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 3. Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 4. Enable BuildKit for Docker
      - name: Build and push Docker image for amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/my-go-app:latest
          platforms: linux/amd64

      # 5. Build and push Docker image for arm64
      - name: Build and push Docker image for arm64
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/my-go-app:latest-arm64
          platforms: linux/arm64

      # 6. Run tests inside the Docker container after building the image
      - name: Run Tests in Docker Container
        run: |
          docker run --rm ghcr.io/${{ github.repository }}/my-go-app:latest go test ./...

      # 7. Security Scan
      - name: Scan for Vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository }}/my-go-app:latest
          format: 'table'
          exit-code-on-high-severity: true


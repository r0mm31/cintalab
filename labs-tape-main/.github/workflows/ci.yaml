name: CI

on:
  pull_request:
    types: [opened, reopened]
  push:
    branches: ["**"]

jobs:
  build-image:
    name: Build the image
    runs-on: ubuntu-20.04

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Enable BuildKit for Docker
      - name: Build and push Docker image for amd64
        uses: docker://ghcr.io/errordeveloper/imagine:2ac274f.8fed464-dev@sha256:fb1b83b0b83701990dbf9449058c7ad611e70ec15cb42bb394260a71daeb391f
        env:
          ANY_REGISTRY_DISABLE: true
          DOCKER_HUB_PUBLIC_ACCESS_ONLY: true
          GHCR_USERNAME: $GITHUB_ACTOR
          GHCR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_BUILDKIT: 1
        with:
          entrypoint: imagine
          args: build --platform linux/amd64 --config build.yaml --upstream-branch origin/main --registry ghcr.io/docker --push

      # Build and push Docker image for arm64 in parallel
      - name: Build and push Docker image for arm64
        uses: docker://ghcr.io/errordeveloper/imagine:2ac274f.8fed464-dev@sha256:fb1b83b0b83701990dbf9449058c7ad611e70ec15cb42bb394260a71daeb391f
        env:
          ANY_REGISTRY_DISABLE: true
          DOCKER_HUB_PUBLIC_ACCESS_ONLY: true
          GHCR_USERNAME: $GITHUB_ACTOR
          GHCR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_BUILDKIT: 1
        with:
          entrypoint: imagine
          args: build --platform linux/arm64 --config build.yaml --upstream-branch origin/main --registry ghcr.io/docker --push
